{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\iago.alves\\\\Desktop\\\\SnakeGame-TypeScript\\\\components\\\\Board\\\\index.tsx\";\nimport React from \"react\";\nimport { Container, Wrapper, Linha, Quadrado, Score } from './styles';\n\nconst Board = ({\n  boardelements,\n  score\n}) => /*#__PURE__*/_jsxDEV(Container, {\n  children: [/*#__PURE__*/_jsxDEV(Score, {\n    children: [\"Snake Game\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \"Your Score: \", score / 2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"By iago333dev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: boardelements.map((row, j) => /*#__PURE__*/_jsxDEV(Linha, {\n      children: row.map((element, i) => /*#__PURE__*/_jsxDEV(Quadrado, {\n        state: element\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/iago.alves/Desktop/SnakeGame-TypeScript/components/Board/index.tsx"],"names":["React","Container","Wrapper","Linha","Quadrado","Score","Board","boardelements","score","map","row","j","element","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,KAA9C,QAA2D,UAA3D;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AACnCC,EAAAA,aADmC;AACrBC,EAAAA;AADqB,CAAD,kBAIlC,QAAC,SAAD;AAAA,0BACE,QAAC,KAAD;AAAA,0CAEE;AAAA;AAAA;AAAA;AAAA,YAFF,kBAIeA,KAAK,GAAC,CAJrB,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAaE,QAAC,OAAD;AAAA,cACGD,aAAa,CAACE,GAAd,CAAkB,CAACC,GAAD,EAAMC,CAAN,kBACjB,QAAC,KAAD;AAAA,gBACGD,GAAG,CAACD,GAAJ,CAAQ,CAACG,OAAD,EAAUC,CAAV,kBACP,QAAC,QAAD;AAAkB,QAAA,KAAK,EAAED;AAAzB,SAAeC,CAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH,OAAYF,CAAZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UAbF;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF;;KAAML,K;AAiCN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Container, Wrapper, Linha, Quadrado, Score } from './styles';\r\n\r\ninterface BoardProps {\r\n  boardelements: string[][]\r\n  score: number;\r\n}\r\n\r\nconst Board: React.FC<BoardProps> = ({\r\n  boardelements,score\r\n}) => (\r\n\r\n  <Container>\r\n    <Score>\r\n    Snake Game \r\n      <br>\r\n      </br>\r\n      Your Score: {score/2}    \r\n      <br>\r\n    </br>\r\n      <p>By iago333dev</p>\r\n    </Score>\r\n\r\n    \r\n\r\n    <Wrapper>\r\n      {boardelements.map((row, j) => (        \r\n        <Linha key={j}>\r\n          {row.map((element, i) => (          \r\n            <Quadrado key={i} state={element}>\r\n              \r\n            </Quadrado>\r\n          ))}\r\n        </Linha>\r\n      ))}\r\n    </Wrapper>\r\n\r\n  </Container>  \r\n\r\n);\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}