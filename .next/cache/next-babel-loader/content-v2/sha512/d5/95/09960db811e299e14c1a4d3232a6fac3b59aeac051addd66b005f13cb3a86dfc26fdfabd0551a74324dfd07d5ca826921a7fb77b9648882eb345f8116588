{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\iago.alves\\\\Desktop\\\\SnakeGame-TypeScript\\\\components\\\\Board\\\\index.tsx\";\nimport React from \"react\";\nimport { Container, Wrapper, Linha, Quadrado } from \"./styles\";\n\nconst Board = ({\n  boardelements\n}) => /*#__PURE__*/_jsxDEV(Container, {\n  children: /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: boardelements.map((row, j) => /*#__PURE__*/_jsxDEV(Linha, {\n      children: row.map((element, i) => /*#__PURE__*/_jsxDEV(Quadrado, {\n        state: element\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this))\n    }, j, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/iago.alves/Desktop/SnakeGame-TypeScript/components/Board/index.tsx"],"names":["React","Container","Wrapper","Linha","Quadrado","Board","boardelements","map","row","j","element","i"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,KAA7B,EAAoCC,QAApC,QAAoD,UAApD;;AAMA,MAAMC,KAA2B,GAAG,CAAC;AACnCC,EAAAA;AADmC,CAAD,kBAGlC,QAAC,SAAD;AAAA,yBACE,QAAC,OAAD;AAAA,cACGA,aAAa,CAACC,GAAd,CAAkB,CAACC,GAAD,EAAMC,CAAN,kBACjB,QAAC,KAAD;AAAA,gBACGD,GAAG,CAACD,GAAJ,CAAQ,CAACG,OAAD,EAAUC,CAAV,kBACP,QAAC,QAAD;AAAkB,QAAA,KAAK,EAAED;AAAzB,SAAeC,CAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH,OAAYF,CAAZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAHF;;AAkBA,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { Container, Wrapper, Linha, Quadrado } from \"./styles\";\r\n\r\ninterface BoardProps {\r\n  boardelements: string[][]\r\n}\r\n\r\nconst Board: React.FC<BoardProps> = ({\r\n  boardelements,\r\n}) => (\r\n  <Container>\r\n    <Wrapper>\r\n      {boardelements.map((row, j) => (        \r\n        <Linha key={j}>\r\n          {row.map((element, i) => (          \r\n            <Quadrado key={i} state={element}>\r\n              \r\n            </Quadrado>\r\n          ))}\r\n        </Linha>\r\n      ))}\r\n    </Wrapper>\r\n  </Container>\r\n);\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}